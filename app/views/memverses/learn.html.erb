<% page_title I18n.t :memory_verse_review, :scope => 'page_titles' %>

<div class="white-box-bg">

    <div class="verse-selection">

        <!-- Reference entry box -->
        <div class="verse-field ui-widget">
            <label class="tag">Enter a reference or tag</label>
            <img class="spinner spinner-add-verse" id="ajax_spinner" src="/assets/indicator2.gif" alt="Searching ..." style="display: none" />
            <%= text_field_tag(:verse, params[:verse], :class => "flex-verse-search", :id => "js_flex-verse-search", :placeholder => "e.g. Romans 3:2-5 or 'creation'" )%> 
        </div>        

        <!-- Search Results -->
        <div class="mv-search-results-compact">
            <%= render "verses/scroll" %>
        </div>


        <!-- Action buttons -->
        <div class="verse-list-actions">

        </div>

    </div> 

    <!-- Center Panel -->
    <div class="verse-learning">
        

        <div class="top-heading">
            <h2><span><%= t('.verse') %>: </span><span class="verse-ref"></span><span class="verse-tl"></span></h2>
            <!-- <div id="toggle-hint" class="toggle-hint"><%= t('.show_verse') %></div> -->
        </div>

        <div class="assistance">

            <div class="mnemonic  "></div>

            <div class="blankified"></div>

        </div>

        <div class="progression-control">
            <div class="level-controller">
                <div class="dec-level"><%= image_tag( "left_arrow_32x32.png",         :width => 32, :height => 32 ) %></div>
                <div class="cur-level">Level <span class="level-num">0</span></div>        
                <div class="inc-level"><%= image_tag( "right_arrow_32x32.png",        :width => 32, :height => 32 ) %></div>            
            </div>
            <div class="nxt-verse"><%= image_tag( "right_arrow_orange_32x32.png", :width => 32, :height => 32 ) %></div>            
        </div>

    </div>

    <!-- Right Panel -->
    <div class="right-panel">
        <div class="verse-ref-list">
            <h3>Practice List</h3>
            <ul id="upcoming-verses">
            </ul>   
        </div>  
    </div>

</div>

<script language="JavaScript" type="text/javascript"><!--
    
    $(document).ready(function() {

        //------- State variables ---------------------
        var practiceState = {
            
            // verse being learned
            ref:      null,
            fullText: null,
            mnemonic: null,
            mvId:     null,

            // verses in practice queue
            queued_verses: 0,

            // in memory queue
            queue: [],

            // current level
            level: 0,

            // add verse to the in-memory queue
            addToQueue: function ( $Verse ) {
                
                var queueVerse = {
                    mvId        : $Verse.find(".mv-id").html(),
                    ref         : $Verse.find(".ref").html(),
                    fullText    : $Verse.find(".full-text").html(),
                    mnemonic    : $Verse.find(".mnemonic").html()
                }
                
                this.queue.push( queueVerse );

                if (this.queued_verses == 0) {   //j no verses queued up for learning
                    this.nextVerse( );
                    this.queued_verses += 1;
                }

                this.queued_verses += 1;

                this.updateControls();
            },

            // remove verse from the in-memory queue
            removeFromQueue: function ( mvId ) {

                this.queue = $.grep( this.queue, function( mv ) { return mv.mvId != mvId; });
                this.queued_verses -= 1;
                this.updateControls();

            },


            // update status of current verse
            startReview: function () {

            },
            
            // get next verse
            nextVerse: function () {

                var replacementVerse = this.queue.shift();    // remove first verse from queue
                this.queued_verses -= 1;                      // update queue count

                this.level    = 0;      
                this.fullText = replacementVerse.fullText;
                this.ref      = replacementVerse.ref;
                this.mnemonic = replacementVerse.mnemonic;
                this.mvId     = replacementVerse.mvId;

                $(".verse-ref                 ").html( this.ref );
                $(".level-num                 ").html( "0" );
                $(".verse-learning .mnemonic  ").html( this.mnemonic );
                // $(".blankified                ").html( blankifyVerse( this.fullText, this.level * 10 ) );

                this.updateControls();

            },

            // move verse to next level of difficulty
            levelUp: function () {
                
                if ( this.level < 10 ) {
                    this.level += 1;                    
                }

                this.updateControls();

            },

            // move verse to previous level of difficulty
            levelDown: function () {

                if ( this.level > 0 ) {
                    this.level -= 1;
                }   

                this.updateControls();
        
            },

            updateControls: function () {

                $(".level-num ").html( this.level );
                $(".blankified").html( blankifyVerse( this.fullText, this.level * 10 ) );
                $("input.blank-word:first").focus();
                
                if ( this.level >= 10) {
                    $(".inc-level").css('visibility', 'hidden');
                    $(".dec-level").css('visibility', 'visible');
                } 

                else if ( this.level <= 0 ) {
                    $(".inc-level").css('visibility', 'visible');
                    $(".dec-level").css('visibility', 'hidden');
                }

                else {
                    $(".inc-level").css('visibility', 'visible');
                    $(".dec-level").css('visibility', 'visible');                    
                }

                if ( this.queued_verses === 0 ) {
                    $(".cur-level").css('visibility', 'hidden');
                    $(".nxt-verse").css('visibility', 'hidden');
                } else if ( this.queued_verses === 1 ) {
                    $(".cur-level").css('visibility', 'visible');
                    $(".nxt-verse").css('visibility', 'hidden');
                } else {
                    $(".cur-level").css('visibility', 'visible');
                    $(".nxt-verse").css('visibility', 'visible');
                }                
                
            }

        };


        //------- Initial setup -----------------------
        // initialize scrollable module
        $(".scrollable").scrollable({ vertical: true, mousewheel: true });

        //------- Searching for a verse----------------
        $("#js_flex-verse-search").observe_field(0.2, function( ) { 
            // clear prior search results
            clearSearchResults();
            // search and display results with callback function
            mv_search(this.value, displayMvSearchResultsFn );
        });

        //------- Selecting verses to practice -------
        $( ".mv-search-results-compact" ).on( "click", ".select-verse-button", function( e ) {

            var $verseToAdd    = $(this).siblings(".ref-and-details");
            var $verseForQueue = $verseToAdd.clone()

            // Add verse to memory queue
            practiceState.addToQueue( $verseForQueue );

            if ( practiceState.queued_verses > 1 ) {

                // Hide first words
                $verseForQueue.find(".first-words").hide();

                // Build HTML for each verse
                var $queued_vs = $('<li/>').addClass('upcoming-verse-ref')
                    // verse
                    .append( $verseForQueue )
                    // remove button
                    .append('<div class="remove-verse-button"><a href="#" class="compact-minus-button"></a></div>');

                // Move verse from search results to verse queue
                $("#upcoming-verses").append( $queued_vs );

            }

            $verseToAdd.parent().fadeOut();
        }); 

        //------- Removing a verse from queue ---------
        $(".verse-ref-list").on( "click", ".remove-verse-button", function() {
            
            $(this).parent().remove();
            // displayAlertMessage("Removing memory verse" + $(this).parent().find(".mv-id").html() );
            practiceState.removeFromQueue( $(this).parent().find(".mv-id").html() );

        });

        //------- Typing a verse ----------------------
        $(".blankified").on( "keyup", "input.blank-word", function (e) { 
             
            // Word correct   ==> next word
            if ( scrub_text( this.name ) === scrub_text( this.value.trim() ) ) { 

                $(this).next().focus();  // advance cursor to next blank word

                // Level complete ==> next level
                if ( $(this).next().length === 0 ) {  // there are no other words to fill in
                    practiceState.levelUp();
                }
            }

            // check for down arrow keypress
            else if ( e.keyCode === 40 ) {
                // show current word
                $(this).val( this.name ).animate({ color: '#FFD' }, 1100, 'easeInExpo', function() {
                    $(this).val('');
                    $(this).css({color:'#444'}); // same color as .assistance
                });;
            }

            // Verse complete ==> next verse


        });

        //------- Changing a level --------------------
        $( ".progression-control" ).on( "click", ".inc-level", function( e ) {
            practiceState.levelUp();
        });

        $( ".progression-control" ).on( "click", ".dec-level", function( e ) {
            practiceState.levelDown();
        });

        //------- Moving to the next verse  -----------
        $(".nxt-verse").on( "click", function () {
            practiceState.nextVerse();
            $("#upcoming-verses").children(":first").remove();
        });

    }); // End of jQuery document ready

--></script>        