<% page_title "Live Quiz :: " + @quiz.name %>

<!-- Quiz instructions : Pop-up box -->
<div id="welcome-box" style="display:none">

	<h2>Welcome!</h2>

	<% if @quiz.id != 1 and !["NAS", "NKJ", "KJV", "ESV"].include?(@current_user.translation) %>

		<div id="select-trans">
			<h3>Choose a Version</h3>
			<p><%= @current_user.translation %> is your default version for Memverse. However, it is <strong>not supported by this quiz</strong>.</p>
			<!--<p>Please select a version to use: <a href="#ESV">ESV 2011</a>, <a href="#NAS">NASB</a>, <a href="#NKJ">NKJV</a>, or <a href="#KJV">KJV</a>. (Note: <%= @current_user.translation %> will remain your default version; your selection now is just for this quiz.)</p>-->
			<p>The <strong>valid versions</strong> are ESV (2011), NASB, NKJ, and KJV. Please go to your profile by <a href="/update_profile">clicking here</a>, update your version to one of these, and then come back for the quiz. Thanks!</p>
		</div>

	<% else %>

		<h3>Quiz Instructions</h3>
		<p>
			The quiz will have <strong><%= @num_questions %> questions</strong> and last <strong><%= "#{@minutes} minute#{"s" unless @minutes == 1}" %></strong>. Each question will be worth a maximum of 15 points.
		</p>
		<p>
			You will answer all the questions on the left side. The middle column will display the scoreboard and the right column is only
			used for chatting with the other contestants.
		</p>

		<p>Your version is set to <strong><%= @current_user.translation %></strong>.</p>

		<p><input type="button" class="green-button" onclick="$.fancybox.close()" value="OK, I'm ready!" />

	<% end %>

</div> <!-- End of Quiz Instructions -->

<div class="white-box-with-margins" style="position:relative">

	<!-- TOP QUIZ HEADER -->
	<div id="quiz-header">
		<h1 id="quiz-name"><%= @quiz.name %></h1>
		<div id="quiz-timer"></div>
		<div id="countdown-till"><!-- this will say "till next question" or "till quiz starts" --></div>
		<div id="quizzers-stats" class="quiz-button">
			Quizzers <span id="quizzers-count"></span>
		</div>
	</div>

	<!-- QUIZ QUESTIONS -->
	<div id="live-quiz">
		<div id="questions-answers">
			<div>
				<h3>Questions</h3>
				<% for q in 1..@num_questions %>
					<span class="q-dot" id="dot-<%= q %>"><%= q %></span>
				<% end %>

				<% for q in 1..@num_questions %>
					<div id="question-<%= q %>" class="question" style="display:none">
						<div id="q-msg"></div>
						<div id="q-question"></div>
						<div id="q-answer"></div>
					</div>
				<% end %>
			</div>
		</div>
	</div>

	<!-- ROSTER -->
	<div id="roster-window">
	</div>

	<!-- SCOREBOARD -->
	<div id="live-scoreboard">
		<h3>Scoreboard</h3>
		<div id="live-quiz-scores">
			<p>Scores are updated at the end of each question.</p>
		</div>
	</div>

	<!-- CHAT WINDOW -->
	<div id="chat-window">

		<h3>
			Chat (<span id="chat_status"><%= @chat_status %></span>)
			<%= (link_to "Toggle Status", {:controller => "chat", :action => "toggle_channel", :channel => "quiz-#{@quiz.id}"}, :remote => true) if current_user == @quiz_master %>
		</h3>

		<div id="chat-stream-narrow">
		</div>

		<%= form_tag('/chat/send', :id => 'chat_window', :remote => true) do %>
			<%= text_field_tag 'msg_body', '', :size => 28, :html => {:autocomplete => "off"} %>
			<%= hidden_field_tag 'sender',  current_user.name_or_login %>
			<%= hidden_field_tag 'user_id', current_user.id %>
			<%= hidden_field_tag 'channel', "quiz-#{@quiz.id}" %>
			<%= submit_tag 'Send', {:onclick => "return mvSubmitQuizChat();"} %>
		<% end %>
	</div>

	<div class="clr"></div>
</div>

<script type="text/javascript" charset="utf-8">

var memverseUserID    = "<%= current_user.id %>";            // global variable
var memverseUserName  = "<%= current_user.name_or_login %>"; // global variable
var memverseUserLogin = "<%= current_user.login %>";         // global variable

$(document).ready(function() {

	// Set up quiz room for user
	quizRoom.initialize( '<%= @num_questions %>' );

	// maybe move this into initialize function above ??
	channel     = "quiz-<%= @quiz.id %>";
    translation = "<%= current_user.translation %>";

	// Init
    var pubnub = PUBNUB.init({
        publish_key   : '<%= PN.publish_key %>',
        subscribe_key : '<%= PN.subscribe_key %>',
        uuid          : memverseUserID
    });

    // LISTEN
    pubnub.subscribe({
        channel  : channel,
        message  : function(data) { quizRoom.handleMessage(data) },
        connect  : connect,     // Callback when connection is established
        presence : presence     // Callback when users join/leave channel
    });

    // Get List of Occupants and Occupancy Count.
    function connect() {
    	pubnub.here_now({
    		channel  : channel,
    		callback : presence
    	});
    };

    // Callback when users join/leave channel and on connection
    function presence ( message, env, channel ) {

		var roster_uid   = message.uuid;

		// --- User joins quiz ---
		if (message.action == "join") {

			$.getJSON('/users/'+ message.uuid +'.json', function( data ) {

				var roster_uname = data.name;
				var gravatar_url = data.avatar_url;
				var user_link   = build_user_link(roster_uid, roster_uname);
				var li  = $("<li/>").addClass("chat-announcement").append(user_link);

				quizRoom.userIDArray.push({ id: data.id, name: data.name, avatarURL: data.avatar_url, userLink: user_link });
				console.log("New user joining: " + data.name );
				console.log("Roster is now: " + quizRoom.userIDArray );

				// copied from Juggernaut code ... optimize this
				li.append(" entered the room.");
				var div = $(build_roster_item( roster_uid, roster_uname, gravatar_url ));
				$("#roster-window").scrollTop($("#roster-window")[0].scrollHeight).append(div);
				div.effect('highlight', {}, 3000);
				$("#quizzers-stats").effect('highlight', {}, 3000);
				$("#quizzers-count").html("(" + $("div.roster-item").length + ")");

				chat_stream_scroll( function () {
					$("#chat-stream-narrow").append(li);
				});
			});

		// --- User leaves quiz ---
		} else if (message.action == "leave") {

			var departedUser = quizRoom.userIDArray.splice( quizRoom.userIDArray.indexOf( roster_uid ), 1 );
			console.log("User leaving:  " + departedUser[0].name );
			console.log("Roster is now: " + quizRoom.userIDArray );


			var li  = $("<li/>").addClass("chat-announcement").append(departedUser[0].userLink);

			// copied from Juggernaut code ... optimize me
			li.append(" left the room.");
			$("div#" + roster_uid).remove();
			$("#quizzers-count").html("(" + $("div.roster-item").length + ")");

			chat_stream_scroll( function () {
				$("#chat-stream-narrow").append(li);
			});

		} else if (message.action == "timeout" ) {

			// Need to handle timeouts ... not sure how

		// --- Create roster when joining ---
		} else {
			// quizRoom.userIDArray = message.uuids;
			console.log("Joining quiz room: " + quizRoom.userIDArray );
			console.log("Event            : " + env );
			console.log("Channel          : " + channel );
		}

    };

    $.fancybox($("#welcome-box").html(), {padding: 20});

    // TODO: Get this working. This is selecting the select-trans that is invisible, not the one in the fancybox.
    $("#select-trans").delegate("a", "click", function(e){
    	e.preventDefault();

    	alert("delegate is firing now!");
		translation = $(this).attr("href").replace("#","");
		alert("translation is "+translation);

		$("#select-trans").text("Thank you. Your translation is set to "+translation+"for this quiz.").effect('highlight', {}, 3000);
	});


	// Show window with quizzers
	$("#quizzers-stats").click( quizRoom.toggleQuizzersWindow );

	// Allow quiz master to unban users
	<% if current_user == @quiz_master %>

		$("#chat-stream-narrow").delegate("li.chat-username", "hover", function(){
			$(".ban").remove(); // remove any previous ban links
			if($(this).attr("id") && $(this).attr("id").length > 0){ // server announcements don't have user id
				ban_id = $(this).attr("id");
				$(this).append(" <a href='/chat/toggle_ban?user_id="+ban_id+"' data-remote class='ban'>(toggle ban)</a>");
			}
		});

	<% end %>

	// Show previous questions
	$("#questions-answers").delegate("span.q-dot", "click", function(){
		active_question = !($(".q-dot.current").hasClass("green") || $(".q-dot.current").hasClass("red"));
		if(!active_question && ($(this).hasClass("red") || $(this).hasClass("green"))) { // verify clickability
			$(".q-dot.current").removeClass("current");
			$(this).addClass("current");

			q_no = $(this).attr("id").replace("dot-","");

			$(".question").hide();
			$("#question-"+q_no).show();
		}
	});

	// Set quiz status
	$.getJSON('/live_quiz/till_start/<%= @quiz.id %>.json', function(data) {
		if (data.status) {
			$("#countdown-till").html("<strong>Quiz Status:</strong> " + data.status);
		} else {
			$('#quiz-timer').countdown({until: data.time, significant: 2});
			$("#countdown-till").text("till quiz starts");
		}
	});

});
</script>
