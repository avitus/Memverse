[1mdiff --git a/lib/swagger/docs/generator.rb b/lib/swagger/docs/generator.rb[m
[1mindex ed18606..6455c92 100644[m
[1m--- a/lib/swagger/docs/generator.rb[m
[1m+++ b/lib/swagger/docs/generator.rb[m
[36m@@ -17,34 +17,56 @@[m [mmodule Swagger[m
         end[m
 [m
         def write_docs(apis = nil)[m
[31m-          apis ||= Config.registered_apis[m
[31m-          results = {}[m
[31m-          set_real_methods[m
[31m-          unless apis.empty?[m
[31m-            apis.each do |api_version,config|[m
[31m-              config.reverse_merge!(DEFAULT_CONFIG)[m
[31m-              results[api_version] = write_doc(api_version, config)[m
[31m-            end[m
[31m-          else[m
[31m-            results[DEFAULT_VER] = write_doc(DEFAULT_VER, DEFAULT_CONFIG)[m
[32m+[m[32m          results = generate_docs(apis)[m
[32m+[m[32m          results.each do |api_version, result|[m
[32m+[m[32m            write_doc(result)[m
           end[m
           results[m
         end[m
 [m
[31m-        def write_doc(api_version, config)[m
[31m-          settings = get_settings(api_version, config)[m
[31m-[m
[32m+[m[32m        def write_doc(result)[m
[32m+[m[32m          settings = result[:settings][m
[32m+[m[32m          config = result[:config][m
           create_output_paths(settings[:api_file_path])[m
           clean_output_paths(settings[:api_file_path]) if config[:clean_directory] || false[m
[32m+[m[32m          root = result[:root][m
[32m+[m[32m          resources = root.delete 'resources'[m
[32m+[m[32m          write_to_file("#{settings[:api_file_path]}/api-docs.json", root, config)[m
[32m+[m[32m          resources.each do |resource|[m
[32m+[m[32m            resource_file_path = resource.delete 'resourceFilePath'[m
[32m+[m[32m            write_to_file(File.join(settings[:api_file_path], "#{resource_file_path}.json"), resource, config)[m
[32m+[m[32m          end[m
[32m+[m[32m          result[m
[32m+[m[32m        end[m
 [m
[32m+[m[32m        def generate_docs(apis=nil)[m
[32m+[m[32m          apis ||= Config.registered_apis[m
[32m+[m[32m          results = {}[m
[32m+[m[32m          set_real_methods[m
[32m+[m
[32m+[m[32m          apis[DEFAULT_VER] = DEFAULT_CONFIG if apis.empty?[m
[32m+[m
[32m+[m[32m          apis.each do |api_version, config|[m
[32m+[m[32m            settings = get_settings(api_version, config)[m
[32m+[m[32m            config.reverse_merge!(DEFAULT_CONFIG)[m
[32m+[m[32m            results[api_version] = generate_doc(api_version, settings, config)[m
[32m+[m[32m            results[api_version][:settings] = settings[m
[32m+[m[32m            results[api_version][:config] = config[m
[32m+[m[32m          end[m
[32m+[m[32m          results[m
[32m+[m[32m        end[m
[32m+[m
[32m+[m[32m        def generate_doc(api_version, settings, config)[m
           root = { :api_version => api_version, :swagger_version => "1.2", :base_path => settings[:base_path] + "/", :apis => []}[m
           results = {:processed => [], :skipped => []}[m
[32m+[m[32m          resources = [][m
 [m
           get_route_paths(settings[:controller_base_path]).each do |path|[m
             ret = process_path(path, root, config, settings)[m
             results[ret[:action]] << ret[m
             if ret[:action] == :processed[m
[31m-              create_resource_file(ret[:path], ret[:apis], ret[:models], settings, root, config)[m
[32m+[m[32m              resource = generate_resource(ret[:path], ret[:apis], ret[:models], settings, root, config)[m
[32m+[m[32m              resources << resource[m
               debased_path = get_debased_path(ret[:path], settings[:controller_base_path])[m
               resource_api = {[m
                 path: "#{Config.transform_path(trim_leading_slash(debased_path))}.{format}",[m
[36m@@ -53,9 +75,9 @@[m [mmodule Swagger[m
               root[:apis] << resource_api[m
             end[m
           end[m
[31m-[m
[32m+[m[32m          root[:resources] = resources[m
           camelize_keys_deep!(root)[m
[31m-          write_to_file("#{settings[:api_file_path]}/api-docs.json", root, config)[m
[32m+[m[32m          results[:root] = root[m
           results[m
         end[m
 [m
[36m@@ -115,7 +137,7 @@[m [mmodule Swagger[m
           {action: :processed, path: path, apis: apis, models: models, klass: klass}[m
         end[m
 [m
[31m-        def create_resource_file(path, apis, models, settings, root, config)[m
[32m+[m[32m        def generate_resource(path, apis, models, settings, root, config)[m
           debased_path = get_debased_path(path, settings[:controller_base_path])[m
           demod = "#{debased_path.to_s.camelize}".demodulize.camelize.underscore[m
           resource_path = trim_leading_slash(debased_path.to_s.underscore)[m
[36m@@ -123,8 +145,8 @@[m [mmodule Swagger[m
           camelize_keys_deep!(resource)[m
           # Add the already-normalized models to the resource.[m
           resource = resource.merge({:models => models}) if models.present?[m
[31m-          # write controller resource file[m
[31m-          write_to_file(File.join(settings[:api_file_path], "#{resource_path}.json"), resource, config)[m
[32m+[m[32m          resource[:resource_file_path] = resource_path[m
[32m+[m[32m          resource[m
         end[m
 [m
         def get_route_path_apis(path, route, klass, settings, config)[m
[1mdiff --git a/spec/lib/swagger/docs/generator_spec.rb b/spec/lib/swagger/docs/generator_spec.rb[m
[1mindex d319ac3..ba57ccd 100644[m
[1m--- a/spec/lib/swagger/docs/generator_spec.rb[m
[1m+++ b/spec/lib/swagger/docs/generator_spec.rb[m
[36m@@ -298,7 +298,7 @@[m [mdescribe Swagger::Docs::Generator do[m
                 }[m
               }[m
             }[m
[31m-            expect(models['Tag']).to eq expected_model[m
[32m+[m[32m            expect(models['tag']).to eq expected_model[m
           end[m
         end[m
       end[m
