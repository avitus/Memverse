/usr/local/bin/ruby -r ./siteconf20150305-49733-1xtpfct.rb extconf.rb 
checking for ffi_call() in -lffi... yes
checking for ffi_prep_closure()... yes
checking for ffi_raw_call()... yes
checking for ffi_prep_raw_closure()... yes
checking for rb_thread_blocking_region()... yes
checking for rb_thread_call_with_gvl()... yes
checking for rb_thread_call_without_gvl()... yes
checking for ffi_prep_cif_var()... yes
creating extconf.h
creating Makefile

make "DESTDIR=" clean

make "DESTDIR="
compiling Type.c
compiling Variadic.c
compiling MethodHandle.c
compiling ffi.c
compiling Platform.c
compiling ClosurePool.c
compiling AbstractMemory.c
compiling DataConverter.c
compiling MemoryPointer.c
compiling Pointer.c
compiling StructByValue.c
compiling FunctionInfo.c
compiling StructByReference.c
compiling MappedType.c
compiling LastError.c
compiling LongDouble.c
compiling Function.c
Function.c: In function ‘callback_invoke’:
Function.c:479:9: warning: passing argument 1 of ‘rb_thread_call_with_gvl’ from incompatible pointer type [enabled by default]
         rb_thread_call_with_gvl(callback_with_gvl, &cb);
         ^
Function.c:102:14: note: expected ‘void * (*)(void *)’ but argument is of type ‘VALUE (*)(void *)’
 extern void *rb_thread_call_with_gvl(void *(*func)(void *), void *data1);
              ^
compiling Call.c
compiling StructLayout.c
compiling DynamicLibrary.c
compiling ArrayType.c
compiling Buffer.c
compiling Thread.c
compiling Types.c
compiling Struct.c
linking shared-object ffi_c.so

make "DESTDIR=" install
/usr/bin/install -c -m 0755 ffi_c.so ./.gem.20150305-49733-1xspkwt
installing default ffi_c libraries
